<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>c on Sakeven&#39;s Blog</title>
    <link>https://sakeven.github.io/tags/c/</link>
    <description>Recent content in c on Sakeven&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 30 Nov 2014 23:50:00 +0800</lastBuildDate><atom:link href="https://sakeven.github.io/tags/c/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>从 Hello World 说起</title>
      <link>https://sakeven.github.io/posts/2014-11-30-hello-world/</link>
      <pubDate>Sun, 30 Nov 2014 23:50:00 +0800</pubDate>
      
      <guid>https://sakeven.github.io/posts/2014-11-30-hello-world/</guid>
      <description>#include &amp;lt;stdio.h&amp;gt; static __attribute__((constructor)) void before() { printf(&amp;#34;Hello&amp;#34;); } static __attribute__((destructor)) void after() { printf(&amp;#34; World!\n&amp;#34;); } int main(int args, char ** argv) { return 0; } 主函数没有任何函数调用，但是输出了 &amp;ldquo;Hello World!&amp;rdquo; 。Why? Answer: 最近去看了下 printf 函数的定义，在 macOS 10.10 &amp;lt;stdio.h&amp;gt; 中</description>
    </item>
    
    <item>
      <title>函数指针</title>
      <link>https://sakeven.github.io/posts/2014-11-08-function-pointer/</link>
      <pubDate>Sat, 08 Nov 2014 21:00:00 +0800</pubDate>
      
      <guid>https://sakeven.github.io/posts/2014-11-08-function-pointer/</guid>
      <description>定义 函数指针是指向函数的指针。 函数指针的声明方法为： 返回值类型 ( * 指针变量名) ([形参列表]); 如： int (*proc)(int); // 声明函数指针 proc 使用 #include &amp;lt;stdio.h&amp;gt; int add(int, int); // 函数</description>
    </item>
    
    <item>
      <title>位运算</title>
      <link>https://sakeven.github.io/posts/2013-04-06-bitwise/</link>
      <pubDate>Sun, 06 Apr 2014 19:17:00 +0800</pubDate>
      
      <guid>https://sakeven.github.io/posts/2013-04-06-bitwise/</guid>
      <description>大小写互相转换 如果仔细观察 ASCII 码表的话，就可以发现大小写字母的二进制表示中第 5 位相差一个 1 。于是大小写转换可以写成如下： void ch(char *c) { *c = (*c) ^ (1&amp;lt;&amp;lt;5); } 计</description>
    </item>
    
  </channel>
</rss>
