<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lock on Sakeven&#39;s Blog</title>
    <link>https://sakeven.github.io/tags/lock/</link>
    <description>Recent content in lock on Sakeven&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 10 May 2018 20:00:00 +0800</lastBuildDate><atom:link href="https://sakeven.github.io/tags/lock/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>fcntl 锁在 Go 中通过 execve 之后不生效的问题</title>
      <link>https://sakeven.github.io/posts/2018-05-10-fnctl/</link>
      <pubDate>Thu, 10 May 2018 20:00:00 +0800</pubDate>
      
      <guid>https://sakeven.github.io/posts/2018-05-10-fnctl/</guid>
      <description>背景 man 2 fcntl Record locks are not inherited by a child created via fork(2), but are preserved across an execve(2). 看到 fcntl 的介绍，我们想当然地认为 fcntl 的记录锁在 execve 之后都是能够保留的。 在我们使用 Go 来实现的时候，很快就</description>
    </item>
    
    <item>
      <title>/proc/locks</title>
      <link>https://sakeven.github.io/posts/2018-04-21-proc-locks/</link>
      <pubDate>Sat, 21 Apr 2018 20:00:00 +0800</pubDate>
      
      <guid>https://sakeven.github.io/posts/2018-04-21-proc-locks/</guid>
      <description>/proc 是由 Linux 内核提供的伪文件系统。 其中 /proc/locks 则是保存当前由内核锁定的文件的相关信息。 详解 $ cat /proc/locks 1: POSIX ADVISORY READ 4255 08:01:395841 128 128 2: POSIX ADVISORY READ 4255 08:01:395663 1073741826 1073742335 3: OFDLCK ADVISORY WRITE 4254 08:01:395845 0 0 4: POSIX ADVISORY</description>
    </item>
    
  </channel>
</rss>
